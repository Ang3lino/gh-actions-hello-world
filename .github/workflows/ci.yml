name: Deploy to ECR and Apply Terraform

on:
  push:
    branches:
      - main

    paths:
      - 'app/**'       
      - 'tf/**' 

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      # Checkout code
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Detect path changes
        run: |
          echo "Workflow triggered by changes in the following paths:"
          echo "${{ github.event.paths }}" # This will list the paths that triggered the workflow

      # Set up AWS credentials
      - name: Set up AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      # Set up Terraform
      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.0  # Adjust to your required version

      #  Apply Terraform changes
      - name: Apply Terraform changes
        run: |
          echo "Applying Terraform changes..."
          cd tf
          terraform init
          terraform apply -auto-approve

      # Log in to Amazon ECR with docker/login-action
      - name: Log in to Amazon ECR
        uses: docker/login-action@v2
        with:
          registry: ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.us-east-1.amazonaws.com
          username: AWS
          password: ${{ secrets.AWS_ECR_AUTH_TOKEN }}

      - name: Deploy application
        env:
          AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
          ECR_REPO_NAME: ${{ secrets.ECR_REPO_NAME }}
          DOCKER_IMAGE_TAG: latest  # Can be adjusted if needed
          AWS_REGION: us-east-1
        run: |
          echo "Deploying application..."
          cd app
          chmod +x ./deploy.sh
          ./deploy.sh

      # if you need to clean up or verify the push
      - name: Verify Docker image pushed
        run: |
          ECR_REPO_NAME='hello-actions-ecr-repo'
          aws ecr describe-images --repository-name $ECR_REPO_NAME --region us-east-1

      #  Update ECS service
      - name: Update ECS service
        env:
          CLUSTER_NAME: hello-actions-cluster  # Update with your cluster name
          SERVICE_NAME: cc-hello-actions-service  # Update with your service name
        run: |
          echo "Updating ECS service..."
          aws ecs update-service --cluster $CLUSTER_NAME --service $SERVICE_NAME --force-new-deployment
