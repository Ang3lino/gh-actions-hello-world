name: Deploy to ECR and Apply Terraform

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      # Step 1: Checkout code
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Check for changes in app/ and tf/ directories
      - name: Check for changes in app/ and tf/ directories
        id: changes
        run: |
          git fetch origin main
          git diff --quiet HEAD^ HEAD -- app/ || echo "app-changes=true" >> $GITHUB_ENV
          git diff --quiet HEAD^ HEAD -- tf/ || echo "tf-changes=true" >> $GITHUB_ENV

      # Step 3: Set up Terraform
      - name: Set up Terraform
        if: env.tf-changes == 'true'
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.0  # Adjust to your required version

      # Step 4: Apply Terraform if changes are detected in tf/
      - name: Apply Terraform changes
        if: env.tf-changes == 'true'
        run: |
          echo "Changes detected in tf/, applying Terraform..."
          cd tf
          terraform init
          terraform apply -auto-approve

      # Step 5: Deploy only if app/ changed
      - name: Deploy only if app/ changed
        if: env.app-changes == 'true'
        env:
          AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
          ECR_REPO_NAME: ${{ secrets.ECR_REPO_NAME }}
          DOCKER_IMAGE_TAG: latest  # Can be adjusted if needed
        run: |
          echo "Changes detected in app/, proceeding with deployment..."
          cd app
          chmod +x ./deploy.sh
          ./deploy.sh

      # Step 6: Optionally verify Docker image pushed
      - name: Verify Docker image pushed
        if: env.app-changes == 'true'
        run: |
          ECR_REPO_NAME='hello-actions-ecr-repo'
          aws ecr describe-images --repository-name $ECR_REPO_NAME --region us-east-1

      # Step 7: Update ECS service
      - name: Update ECS service
        if: env.app-changes == 'true'
        run: |
          CLUSTER_NAME='hello-actions-cluster'
          SERVICE_NAME='cc-hello-actions-service'
          aws ecs update-service --cluster $CLUSTER_NAME --service $SERVICE_NAME --force-new-deployment
