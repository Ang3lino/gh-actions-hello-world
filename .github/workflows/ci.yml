name: Deploy to ECR

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      # Set up AWS credentials securely using aws-actions/configure-aws-credentials
      - name: Set up AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      # Log in to Amazon ECR with docker/login-action
      - name: Log in to Amazon ECR
        uses: docker/login-action@v2
        with:
          registry: ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.us-east-1.amazonaws.com
          username: AWS
          password: ${{ secrets.AWS_ECR_AUTH_TOKEN }}

      # Run deploy script
      - name: Run deploy script
        run: |
          cd app
          chmod +x ./deploy.sh
          ./deploy.sh
        env:
          AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
          ECR_REPO_NAME: ${{ secrets.ECR_REPO_NAME }}
          DOCKER_IMAGE_TAG: latest  # Can be adjusted if needed

      # Optionally, if you need to clean up or verify the push
      - name: Verify Docker image pushed
        run: |
          ECR_REPO_NAME='hello-actions-ecr-repo'
          aws ecr describe-images --repository-name $ECR_REPO_NAME --region us-east-1

      # ECS service update
      - name: Update ECS service
        run: |
          CLUSTER_NAME='hello-actions-cluster'
          SERVICE_NAME='cc-hello-actions-service'
          aws ecs update-service --cluster $CLUSTER_NAME --service $SERVICE_NAME --force-new-deployment
